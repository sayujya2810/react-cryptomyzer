{"version":3,"sources":["CryptoContext.js","components/Header.js","config/api.js","components/Banner/Carousel.js","components/Banner/Banner.js","components/CoinsTable.js","Pages/Homepage.js","components/SelectButton.js","config/data.js","components/CoinInfo.js","Pages/CoinPage.js","App.js","index.js"],"names":["Crypto","createContext","CryptoContext","children","useState","currency","setCurrency","symbol","setSymbol","useEffect","Provider","value","CryptoState","useContext","useStyles","makeStyles","title","flex","color","fontFamily","fontWeight","cursor","Header","classes","history","useHistory","console","log","darkTheme","createTheme","palette","primary","main","type","ThemeProvider","theme","AppBar","position","Container","Toolbar","Typography","onClick","push","className","variant","Select","style","width","height","marginRight","onChange","e","target","MenuItem","CoinList","SingleCoin","id","HistoricalChart","days","TrendingCoins","useStyle","carousel","display","alignItems","carouselItem","flexDirection","textTransform","numberWithCommas","x","toString","replace","Carousel","trending","setTrending","fetchTrendingCoins","a","axios","get","data","items","map","coin","profit","price_change_percentage_24h","to","src","image","alt","name","marginBottom","toFixed","fontSize","current_price","mouseTracking","infinite","autoPlayInterval","animationDuration","disableDotsControls","disableButtonsControls","responsive","autoPlay","banner","backgroundImage","bannerContent","paddingTop","justifyContent","tagline","textAlign","Banner","CoinsTable","coins","setCoins","loading","setLoading","search","setSearch","page","setPage","fetchCoins","handleSearch","filter","toLowerCase","includes","row","backgroundColor","pagination","margin","TextField","label","TableContainer","LinearProgress","Table","TableHead","TableRow","head","TableCell","align","TableBody","slice","component","scope","gap","market_cap","Pagination","count","length","padding","_","window","scroll","ul","Homepage","SelectButton","selected","selectbutton","border","borderRadius","paddingLeft","paddingRight","chartDays","CoinInfo","historicData","setHistoricData","setDays","fetchHistoricData","prices","container","marginTop","breakpoints","down","labels","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","options","elements","point","radius","day","CircularProgress","size","thickness","CoinPage","useParams","setCoin","fetchCoin","sidebar","heading","description","paddingBottom","marketData","alignSelf","large","ReactHtmlParser","en","split","market_cap_rank","market_data","App","minHeight","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fedfd12.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react'\r\n\r\nconst Crypto = createContext()\r\n\r\nconst CryptoContext = ({children}) => {\r\n\r\n\r\n    const [currency, setCurrency] = useState(\"INR\")\r\n    const [symbol, setSymbol] = useState(\"₹\")\r\n\r\n    useEffect(() => {\r\n        if(currency === \"INR\") setSymbol(\"₹\")\r\n        else if(currency === \"USD\") setSymbol(\"$\")\r\n    }, [currency]);\r\n\r\n    return (\r\n        <Crypto.Provider value={{currency,symbol,setCurrency}}>\r\n            {children}\r\n        </Crypto.Provider>\r\n    )\r\n}\r\n\r\nexport default CryptoContext\r\n\r\nexport const CryptoState = () => {\r\n    return useContext(Crypto);\r\n}","import { AppBar, Container, createTheme, makeStyles, MenuItem, Select, Toolbar, Typography, ThemeProvider } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { CryptoState } from '../CryptoContext'\r\n\r\nconst useStyles = makeStyles( () => ({\r\n    title:{\r\n        flex:1,\r\n        color:\"gold\",\r\n        fontFamily:\"Montserrat\",\r\n        fontWeight: \"bold\",\r\n        cursor: \"pointer\",\r\n    }\r\n}))\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n\r\n    const { currency, setCurrency } = CryptoState()\r\n    console.log(currency);\r\n\r\n    const darkTheme = createTheme({\r\n        palette:{\r\n            primary:{\r\n                main:\"#fff\"\r\n            },\r\n            type:\"dark\",\r\n        },\r\n    })\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <AppBar color='transparent' position='static'>\r\n            <Container>\r\n                <Toolbar>\r\n                    <Typography\r\n                        onClick={() => history.push(\"/\")}\r\n                        className={classes.title}\r\n                        variant=\"h6\">CryptoMyzer</Typography>\r\n\r\n                    <Select\r\n                        variant='outlined'\r\n                        style={{\r\n                            width:100,\r\n                            height:40,\r\n                            marginRight:15,\r\n                        }}\r\n                        value={currency}\r\n\r\n                        onChange={(e) => setCurrency(e.target.value)}>\r\n\r\n                        <MenuItem value={\"USD\"}>USD</MenuItem>\r\n                        <MenuItem value={\"INR\"}>INR</MenuItem>\r\n\r\n                    </Select>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    </ThemeProvider>\r\n    )\r\n}\r\n","export const CoinList = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\r\n\r\nexport const SingleCoin = (id) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}`;\r\n\r\nexport const HistoricalChart = (id, days = 365, currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\r\n\r\nexport const TrendingCoins = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h`;","import { makeStyles } from '@material-ui/core'\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { TrendingCoins } from '../../config/api';\r\nimport { CryptoState } from '../../CryptoContext';\r\nimport { useState, useEffect } from 'react';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyle = makeStyles( (theme)=> ({\r\n    carousel:{\r\n        height:\"50%\",\r\n        display:\"flex\",\r\n        alignItems:\"center\",\r\n    },\r\n    carouselItem:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"center\",\r\n        cursor:\"pointer\",\r\n        textTransform: \"uppercase\",\r\n        color:\"white\",\r\n    }\r\n}));\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\");\r\n}\r\n\r\n\r\nconst Carousel =  () => {\r\n\r\n    const [trending, setTrending] = useState([])\r\n\r\n    const classes = useStyle()\r\n\r\n    const { currency, symbol } = CryptoState()\r\n\r\n    const fetchTrendingCoins = async () => {\r\n        const { data } = await axios.get(TrendingCoins(currency));\r\n        setTrending(data);\r\n    }\r\n\r\n    console.log(trending)\r\n\r\n    useEffect(() => {\r\n        fetchTrendingCoins();\r\n    }, [currency]);\r\n\r\n    const items = trending.map((coin) => {\r\n\r\n        let profit = coin.price_change_percentage_24h >= 0;\r\n\r\n\r\n        return(\r\n            <Link className={classes.carouselItem}\r\n            to={`/coins/${coin.id}`}>\r\n                <img\r\n                    src={coin?.image}\r\n                    alt={coin.name}\r\n                    height=\"80\"\r\n                    style={{marginBottom:10}} />\r\n                    <span>\r\n                        {coin?.symbol}\r\n                        &nbsp;\r\n                        <span\r\n                        style={{\r\n                            color: profit>0 ? \"rgb(14,203,129)\" : \"red\",\r\n                            fontWeight:500,\r\n                        }}>\r\n                            {profit && '+' } {coin?.price_change_percentage_24h?.toFixed(2)}%\r\n                        </span>\r\n                    </span>\r\n\r\n                    <span style={{fontSize:22, fontWeight:500}}>\r\n                        {symbol} {numberWithCommas(coin?.current_price.toFixed(2))}\r\n                    </span>\r\n\r\n            </Link>\r\n        )\r\n    })\r\n\r\n\r\n    const responsive = {\r\n        0:{\r\n            items:2,\r\n        },\r\n        512:{\r\n            items:4,\r\n        },\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div className={classes.carousel}>\r\n            <AliceCarousel\r\n                mouseTracking\r\n                infinite\r\n                autoPlayInterval={1000}\r\n                animationDuration={1500}\r\n                disableDotsControls\r\n                disableButtonsControls\r\n                responsive = {responsive}\r\n                autoPlay\r\n                items = {items}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel\r\n","import { Container, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Carousel from './Carousel'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    banner:{\r\n        backgroundImage: \"url(./banner2.jpg)\"\r\n    },\r\n    bannerContent:{\r\n        height: 400,\r\n        display: \"flex\",\r\n        flexDirection:\"column\",\r\n        paddingTop: 25,\r\n        justifyContent: \"space-around\",\r\n    },\r\n    tagline:{\r\n        display:\"flex\",\r\n        height:\"40%\",\r\n        flexDirection:\"column\",\r\n        justifyContent:\"center\",\r\n        textAlign:\"center\",\r\n    }\r\n}))\r\n\r\nconst Banner = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.banner}>\r\n            <Container className={classes.bannerContent}>\r\n                <div className={classes.tagline}>\r\n                    <Typography\r\n                        variant=\"h2\"\r\n                        style ={{\r\n                            fontWeight:\"bold\",\r\n                            marginBottom:15,\r\n                            fontFamily:\"Montserrat\",\r\n                        }}> CryptoMyzer</Typography>\r\n\r\n                    <Typography\r\n                        variant=\"subtitle2\"\r\n                        style ={{\r\n                            color:\"darkgrey\",\r\n                            textTransform:\"capitalize\",\r\n                            fontFamily:\"Montserrat\",\r\n                        }}> Get all info regarding your favourite Crypto Currency</Typography>\r\n                </div>\r\n                <Carousel />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import axios from 'axios'\r\nimport React from 'react'\r\nimport { CoinList } from '../config/api'\r\nimport { useState, useEffect } from 'react'\r\nimport { CryptoState } from '../CryptoContext'\r\nimport { Container, createTheme, LinearProgress, TableCell, TableContainer, Table, TableHead, TableRow, TextField, ThemeProvider, Typography, TableBody, makeStyles } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { numberWithCommas } from './Banner/Carousel'\r\nimport { Pagination } from '@material-ui/lab'\r\n\r\n\r\nconst CoinsTable = () => {\r\n\r\n    const [coins, setCoins] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [page, setPage] = useState(1)\r\n    const history = useHistory()\r\n\r\n    const {currency, symbol} = CryptoState()\r\n\r\n    const fetchCoins = async() => {\r\n        setLoading(true)\r\n        const { data } = await axios.get(CoinList(currency))\r\n        setCoins(data)\r\n        setLoading(false)\r\n    }\r\n\r\n    console.log(coins)\r\n\r\n    useEffect(() => {\r\n        fetchCoins()\r\n    }, [currency])\r\n\r\n    const darkTheme = createTheme({\r\n        palette:{\r\n            primary:{\r\n                main:\"#fff\",\r\n            },\r\n            type: \"dark\",\r\n        },\r\n    })\r\n\r\n    const handleSearch = () => {\r\n        return coins.filter((coin) => (\r\n            coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search)\r\n        ))\r\n    }\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        row:{\r\n            backgroundColor:\"#16171a\",\r\n            cursor:\"pointer\",\r\n            \"&:hover\":{\r\n                backgroundColor: \"#131111\",\r\n            },\r\n            fontFamily:\"Montserrat\",\r\n        },\r\n        pagination:{\r\n            \"& .MuiPaginationItem-root\":{\r\n                color:\"gold\",\r\n            },\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Container style={{textAlign:\"center\"}}>\r\n                <Typography\r\n                    variant=\"h4\"\r\n                    style={{margin:18, fontFamily:\"Montserrat\"}}>\r\n                        Cryptocurrency Prices by Market Cap\r\n                </Typography>\r\n\r\n                <TextField\r\n                    label=\"Search for a cryptocurrency...\"\r\n                    variant=\"outlined\"\r\n                    style={{marginBottom:20, width:\"100%\"}}\r\n                    onChange={(e) => setSearch(e.target.value)} />\r\n\r\n                <TableContainer>\r\n                    {\r\n                        loading ? (\r\n                            <LinearProgress style={{backgroundColor:\"gold\"}} />\r\n                        ):(\r\n                            <Table>\r\n                                <TableHead style={{backgroundColor:\"#EEBC1D\"}}>\r\n                                    <TableRow>\r\n                                        {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n                                            <TableCell\r\n                                            style={{\r\n                                                color:\"black\",\r\n                                                fontWeight: \"700\",\r\n                                                fontFamily:\"Montserrat\",\r\n                                            }}\r\n                                            key={head}\r\n                                            align={head === \"Coin\" ? \"\" : \"right\"}>\r\n                                                {head}\r\n                                            </TableCell>\r\n                                        ))\r\n\r\n                                        }\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                                <TableBody>\r\n                                    {handleSearch()\r\n                                    .slice((page-1) * 10,(page-1) * 10 + 10)\r\n                                    .map((row) => {\r\n                                        const profit = row.price_change_percentage_24h > 0\r\n                                        return (\r\n                                            <TableRow\r\n                                                onClick={() => history.push(`/coins/${row.id}`)}\r\n                                                className={classes.row}\r\n                                                key={row.name}>\r\n\r\n                                                <TableCell\r\n                                                component=\"th\"\r\n                                                scope='row'\r\n                                                style={{display:\"flex\",gap:15}}>\r\n\r\n                                                    <img\r\n                                                    src={row?.image}\r\n                                                    alt={row.name}\r\n                                                    height=\"50\"\r\n                                                    style={{marginBottom:10}} />\r\n\r\n                                                    <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                                                        <span style={{textTransform:\"uppercase\", fontSize:22,}}>\r\n                                                            {row.symbol}\r\n                                                        </span>\r\n                                                        <span style={{color:\"darkgrey\"}}>{row.name}</span>\r\n                                                    </div>\r\n\r\n                                                </TableCell>\r\n\r\n\r\n\r\n\r\n                                                <TableCell align=\"right\">\r\n                                                    {symbol}{\" \"}\r\n                                                    {numberWithCommas(row.current_price.toFixed(2))}\r\n                                                </TableCell>\r\n\r\n                                                <TableCell\r\n                                                    align=\"right\"\r\n                                                    style={{\r\n                                                        color: profit > 0 ? \"rgb(14,203,149\" : \"red\",\r\n                                                        fontWeight: 500,\r\n                                                    }}>\r\n\r\n                                                        {profit && \"+\"}\r\n                                                        {row.price_change_percentage_24h.toFixed(2)}%\r\n\r\n                                                </TableCell>\r\n\r\n                                                <TableCell align=\"right\">\r\n                                                    {symbol}{\" \"}\r\n                                                    {numberWithCommas(\r\n                                                        row.market_cap.toString().slice(0, -6)\r\n                                                    )}\r\n                                                        M\r\n                                                </TableCell>\r\n\r\n\r\n                                            </TableRow>\r\n                                        )\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        )\r\n                    }\r\n                </TableContainer>\r\n\r\n                <Pagination\r\n                    count={(handleSearch()?.length/10).toFixed(0)}\r\n                    style={{\r\n                        padding:20,\r\n                        width:\"100%\",\r\n                        display:\"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                    onChange={(_, value) => {\r\n                        setPage(value);\r\n                        window.scroll(0,450);\r\n                    }}\r\n                    classes={{ ul: classes.pagination}} />\r\n\r\n\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default CoinsTable\r\n","import React from 'react'\r\nimport Banner from '../components/Banner/Banner'\r\nimport CoinsTable from '../components/CoinsTable'\r\nconst Homepage = () => {\r\n    return (\r\n        <>\r\n            <Banner />\r\n            <CoinsTable/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst SelectButton = ({ children, selected, onClick }) => {\r\n  const useStyles = makeStyles({\r\n    selectbutton: {\r\n      border: \"1px solid gold\",\r\n      borderRadius: 5,\r\n      padding: 10,\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n      fontFamily: \"Montserrat\",\r\n      cursor: \"pointer\",\r\n      backgroundColor: selected ? \"gold\" : \"\",\r\n      color: selected ? \"black\" : \"\",\r\n      fontWeight: selected ? 700 : 500,\r\n      \"&:hover\": {\r\n        backgroundColor: \"gold\",\r\n        color: \"black\",\r\n      },\r\n      width: \"22%\",\r\n      //   margin: 5,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span onClick={onClick} className={classes.selectbutton}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default SelectButton;","export const chartDays = [\r\n    {\r\n      label: \"24 Hours\",\r\n      value: 1,\r\n    },\r\n    {\r\n      label: \"30 Days\",\r\n      value: 30,\r\n    },\r\n    {\r\n      label: \"3 Months\",\r\n      value: 90,\r\n    },\r\n    {\r\n      label: \"1 Year\",\r\n      value: 365,\r\n    },\r\n  ];","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HistoricalChart } from \"../config/api\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  CircularProgress,\r\n  createTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport SelectButton from \"./SelectButton\";\r\nimport { chartDays } from \"../config/data\";\r\nimport { CryptoState } from \"../CryptoContext\";\r\n\r\nconst CoinInfo = ({coin}) => {\r\n\r\n    const [historicData, setHistoricData] = useState()\r\n    const [days, setDays] = useState(1)\r\n\r\n    const {currency} =  CryptoState()\r\n\r\n    const fetchHistoricData = async () => {\r\n        const { data } = await axios.get(HistoricalChart(coin.id , days, currency));\r\n        setHistoricData(data.prices)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchHistoricData()\r\n\r\n    }, [currency, days])\r\n\r\n    const darkTheme = createTheme({\r\n        palette:{\r\n            primary:{\r\n                main:\"#fff\",\r\n            },\r\n            type: \"dark\",\r\n        },\r\n    })\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        container: {\r\n          width: \"75%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginTop: 25,\r\n          padding: 40,\r\n          [theme.breakpoints.down(\"md\")]: {\r\n            width: \"100%\",\r\n            marginTop: 0,\r\n            padding: 20,\r\n            paddingTop: 0,\r\n          },\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n          <div className={classes.container}>\r\n            {!historicData ? (\r\n              <CircularProgress\r\n                style={{ color: \"gold\" }}\r\n                size={250}\r\n                thickness={1}\r\n              />\r\n            ) : (\r\n              <>\r\n                <Line\r\n                  data={{\r\n                    labels: historicData.map((coin) => {\r\n                      let date = new Date(coin[0]);\r\n                      let time =\r\n                        date.getHours() > 12\r\n                          ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                          : `${date.getHours()}:${date.getMinutes()} AM`;\r\n                      return days === 1 ? time : date.toLocaleDateString();\r\n                    }),\r\n\r\n                    datasets: [\r\n                      {\r\n                        data: historicData.map((coin) => coin[1]),\r\n                        label: `Price ( Past ${days} Days ) in ${currency}`,\r\n                        borderColor: \"#EEBC1D\",\r\n                      },\r\n                    ],\r\n                  }}\r\n                  options={{\r\n                    elements: {\r\n                      point: {\r\n                        radius: 1,\r\n                      },\r\n                    },\r\n                  }}\r\n                />\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    marginTop: 20,\r\n                    justifyContent: \"space-around\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  {chartDays.map((day) => (\r\n                    <SelectButton\r\n                      key={day.value}\r\n                      onClick={() => setDays(day.value)}\r\n                      selected={day.value === days}\r\n                    >\r\n                      {day.label}\r\n                    </SelectButton>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </ThemeProvider>\r\n      );\r\n\r\n}\r\n\r\nexport default CoinInfo\r\n","import { LinearProgress, makeStyles, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport CoinInfo from '../components/CoinInfo';\r\nimport { SingleCoin } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { numberWithCommas } from '../components/Banner/Carousel';\r\n\r\nconst CoinPage = () => {\r\n\r\n    const { id } = useParams();\r\n    const [coin, setCoin] = useState();\r\n    const { currency, symbol } = CryptoState();\r\n\r\n    const fetchCoin = async () => {\r\n        const { data } = await axios.get(SingleCoin(id));\r\n        setCoin(data);\r\n    };\r\n\r\n    console.log(coin)\r\n\r\n    useEffect(() => {\r\n        fetchCoin();\r\n    }, []);\r\n\r\n\r\n    const useStyles = makeStyles( (theme) => ({\r\n        container:{\r\n            display:\"flex\",\r\n            [theme.breakpoints.down(\"md\")]:{\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n            },\r\n        },\r\n        sidebar:{\r\n            width:\"30%\",\r\n            [theme.breakpoints.down(\"md\")]:{\r\n                width:\"100%\",\r\n            },\r\n            display:\"flex\",\r\n            flexDirection:\"column\",\r\n            alignItems: \"center\",\r\n            marginTop: 25,\r\n            borderRight: \"2px solid grey\"\r\n        },\r\n        heading:{\r\n            fontWeight: \"bold\",\r\n            marginBottom: 20,\r\n            fontFamily: \"Montserrat\",\r\n        },\r\n        description:{\r\n            width:\"100%\",\r\n            fontFamily: \"Montserrat\",\r\n            padding: 25,\r\n            paddingBottom: 15,\r\n            paddingTop: 0,\r\n            textAlign:\"justify\",\r\n        },\r\n        marketData:{\r\n            alignSelf:\"start\",\r\n            padding:25,\r\n            paddingTop: 10,\r\n            width:\"100%\",\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                display:\"flex\",\r\n                justifyContent: \"space-around\",\r\n            },\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                flexDirection:\"column\",\r\n                alignItems:\"center\",\r\n            },\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                alignItems:\"start\",\r\n            },\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles()\r\n\r\n    if (!coin) return <LinearProgress style={{backgroundColor:\"gold\"}} />\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.sidebar}>\r\n                <img\r\n                    src={coin?.image.large}\r\n                    alt={coin?.name}\r\n                    height=\"200\"\r\n                    style={{ marginBottom: 20}} />\r\n\r\n                <Typography variant=\"h3\" className={classes.heading}>\r\n                    {coin?.name}\r\n                </Typography>\r\n\r\n                <Typography variant=\"subtitle1\" className={classes.description} >\r\n                    {ReactHtmlParser(coin?.description.en.split(\". \")[0])}.\r\n                </Typography>\r\n\r\n                <div className={classes.marketData} >\r\n                    <span style={{display:\"flex\"}}>\r\n                        <Typography variant=\"h5\" className={classes.heading} >\r\n                            Rank:\r\n                        </Typography>\r\n                        &nbsp; &nbsp;\r\n                        <Typography\r\n                        variant=\"h5\"\r\n                        style={{fontFamily:\"Montserrat\"}} >\r\n                            {coin?.market_cap_rank}\r\n                        </Typography>\r\n                    </span>\r\n\r\n                    <span style={{display:\"flex\"}}>\r\n                        <Typography variant=\"h5\" className={classes.heading} >\r\n                            Current Price:\r\n                        </Typography>\r\n                        &nbsp; &nbsp;\r\n                        <Typography\r\n                        variant=\"h5\"\r\n                        style={{fontFamily:\"Montserrat\"}} >\r\n                            {symbol}{\" \"}\r\n                            {numberWithCommas(\r\n                                coin?.market_data.current_price[currency.toLowerCase()]\r\n                            )}\r\n                        </Typography>\r\n                    </span>\r\n\r\n                    <span style={{display:\"flex\"}}>\r\n                        <Typography variant=\"h5\" className={classes.heading} >\r\n                            Market Cap:{\" \"}\r\n                        </Typography>\r\n                        &nbsp; &nbsp;\r\n                        <Typography\r\n                        variant=\"h5\"\r\n                        style={{fontFamily:\"Montserrat\"}} >\r\n                            {symbol}{\" \"}\r\n                            {numberWithCommas(\r\n                                coin?.market_data.market_cap[currency.toLowerCase()]\r\n                                .toString()\r\n                                .slice(0, -6)\r\n                            )}M\r\n                        </Typography>\r\n                    </span>\r\n                </div>\r\n\r\n            </div>\r\n            {/* chart */}\r\n            <CoinInfo coin={coin} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoinPage;","import './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { Header } from './components/Header';\nimport  Homepage from './Pages/Homepage';\nimport  CoinPage from './Pages/CoinPage';\nimport { makeStyles} from '@material-ui/core';\n\n\nfunction App() {\n\n  const useStyles = makeStyles( () => ({\n    App: {\n      backgroundColor: '#14161a',\n      color:\"white\",\n      minHeight:\"100vh\",\n    },\n  }))\n\n  const classes = useStyles()\n\n  return (\n    <BrowserRouter>\n      <div className={classes.App}>\n        <Header />\n        <Route path='/' component={Homepage} exact/>\n        <Route path='/coins/:id' component={CoinPage}/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CryptoContext from './CryptoContext';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CryptoContext>\n      <App />\n    </CryptoContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}